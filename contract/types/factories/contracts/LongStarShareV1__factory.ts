/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LongStarShareV1,
  LongStarShareV1Interface,
} from "../../contracts/LongStarShareV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    name: "CannotSellLastShare",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ContractNotApproved",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimableEth",
        type: "uint256",
      },
    ],
    name: "InsufficientEth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsufficientShares",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimableYield",
        type: "uint256",
      },
    ],
    name: "InsufficientYield",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
    ],
    name: "NotAuthorizedToBuyFirstShare",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "PaymentInsufficient",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "SubjectDoesNotExist",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isBuy",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shareAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    name: "Trade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "blastYieldContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyShares",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "claimableArray",
        type: "address[]",
      },
    ],
    name: "claimYield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getBuyPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getSellPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "keyNft",
            type: "address",
          },
        ],
        internalType: "struct ILongStarShareV1.EditionInitialization",
        name: "init",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keyNft",
    outputs: [
      {
        internalType: "contract LongStarKey",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readClimableYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "readClimableYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellShares",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sharesBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sharesSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeContractBlance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "widthdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "widthdrawAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "yieldClaimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061146f806100206000396000f3fe6080604052600436106101175760003560e01c80638da5cb5b1161009a578063e0da260c11610061578063e0da260c14610353578063e3e02bd614610373578063eab8919314610393578063f2fde38b146103a9578063f9931be0146103c957005b80638da5cb5b1461028d5780638f09926d146102ca5780639ae71781146102ea578063b51d05341461030a578063bb5dddd21461031d57005b80634635256e116100de5780634635256e1461020557806359c6c57d146102255780635cf4ee91146102455780636945b12314610265578063715018a61461027857005b8063020235ff14610120578063174c8fef1461016b5780631f652afb1461019857806333ef2b05146101ad5780633dcc7e29146101cd57005b3661011e57005b005b34801561012c57600080fd5b5061015861013b366004611156565b600360209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561017757600080fd5b50610158610186366004611189565b60056020526000908152604090205481565b3480156101a457600080fd5b506101586103f6565b3480156101b957600080fd5b5061011e6101c83660046111eb565b610468565b3480156101d957600080fd5b506002546101ed906001600160a01b031681565b6040516001600160a01b039091168152602001610162565b34801561021157600080fd5b506101586102203660046112a4565b610574565b34801561023157600080fd5b506000546101ed906001600160a01b031681565b34801561025157600080fd5b506101586102603660046112ce565b6105a0565b61011e6102733660046112a4565b6106c1565b34801561028457600080fd5b5061011e6109a0565b34801561029957600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166101ed565b3480156102d657600080fd5b5061011e6102e53660046112f0565b6109b4565b3480156102f657600080fd5b506101586103053660046112a4565b610b45565b61011e6103183660046112a4565b610b73565b34801561032957600080fd5b50610158610338366004611189565b6001600160a01b031660009081526005602052604090205490565b34801561035f57600080fd5b5061011e61036e36600461133a565b610f04565b34801561037f57600080fd5b5061011e61038e36600461133a565b610f62565b34801561039f57600080fd5b5061015860015481565b3480156103b557600080fd5b5061011e6103c4366004611189565b610fb5565b3480156103d557600080fd5b506101586103e4366004611189565b60046020526000908152604090205481565b600254604051631d864f1d60e31b81523060048201526000916001600160a01b03169063ec3278e890602401602060405180830381865afa15801561043f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104639190611353565b905090565b610470610ff0565b600061047d606484611382565b905060005b82518110156104f15781600560008584815181106104a2576104a26113a4565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546104d991906113ba565b909155508190506104e9816113cd565b915050610482565b50600254604051637cb8cb3160e11b815230600482018190526024820152604481018590526001600160a01b039091169063f9719662906064016020604051808303816000875af115801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e9190611353565b50505050565b6001600160a01b03821660009081526004602052604081205461059790836105a0565b90505b92915050565b60008083156105fb5760066105b66001866113e6565b6105c19060026113f9565b6105cc9060016113ba565b856105d86001826113e6565b6105e291906113f9565b6105ec91906113f9565b6105f69190611382565b6105fe565b60005b90506000841580156106105750836001145b610685576006846106226001886113e6565b61062c91906113ba565b6106379060026113f9565b6106429060016113ba565b61064c86886113ba565b8661065860018a6113e6565b61066291906113ba565b61066c91906113f9565b61067691906113f9565b6106809190611382565b610688565b60005b9050600061069683836113e6565b9050613e806106ad82670de0b6b3a76400006113f9565b6106b79190611382565b9695505050505050565b6000805460405163952f970b60e01b81526001600160a01b0385811660048301529091169063952f970b90602401602060405180830381865afa15801561070c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107309190611353565b6000805460405163bd85b03960e01b81526004810184905292935090916001600160a01b039091169063bd85b03990602401602060405180830381865afa15801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a39190611353565b9050811580156107bc57506001600160a01b0384163314155b156107f057604051631597dc6f60e31b81523360048201526001600160a01b03851660248201526044015b60405180910390fd5b60006107fc82856105a0565b9050803410156108275760405162663fdf60e91b8152346004820152602481018290526044016107e7565b6001600160a01b03851660009081526003602090815260408083203384529091529020546108569085906113ba565b6001600160a01b038616600090815260036020908152604080832033845290915290205561088484836113ba565b6001600160a01b038616600090815260046020526040812091909155600180548392906108b29084906113ba565b90915550506000805460405163292aab8160e11b81526001600160a01b038881166004830152336024830152604482018790526064820188905260a0608483015260a482019390935291169063525557029060c401600060405180830381600087803b15801561092157600080fd5b505af1158015610935573d6000803e3d6000fd5b5033925050506001600160a01b0386167ff7dd8a134438de4c59401760e24ef5c6cc9c74583b2b022085697f3021e597686001878561097482896113ba565b604080519415158552602085019390935291830152606082015260800160405180910390a35050505050565b6109a8610ff0565b6109b2600061104b565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156109fa5750825b905060008267ffffffffffffffff166001148015610a175750303b155b905081158015610a25575080155b15610a435760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610a6d57845460ff60401b1916600160401b1785555b610a76336110bc565b8551600080546001600160a01b039092166001600160a01b0319928316178155600280549092166002604360981b019081179092556040805163784c3b3d60e11b8152905163f098767a9260048084019391929182900301818387803b158015610adf57600080fd5b505af1158015610af3573d6000803e3d6000fd5b505050508315610b3d57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6001600160a01b03821660009081526004602052604081205461059790610b6d9084906113e6565b836105a0565b60005460405163e985e9c560e01b81523360048201523060248201526001600160a01b039091169063e985e9c590604401602060405180830381865afa158015610bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be59190611410565b610c0457604051633824730960e21b81523360048201526024016107e7565b6000805460405163952f970b60e01b81526001600160a01b0385811660048301529091169063952f970b90602401602060405180830381865afa158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c739190611353565b905080600003610c995760405163f2cbd80760e01b8152600481018290526024016107e7565b6000805460405163bd85b03960e01b8152600481018490526001600160a01b039091169063bd85b03990602401602060405180830381865afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d079190611353565b9050828111610d335760405163391eed8360e01b815260048101849052602481018290526044016107e7565b6000610d48610d4285846113e6565b856105a0565b6001600160a01b0386166000908152600360209081526040808320338452909152902054909150841115610d98576040516303c8c6fb60e51b8152336004820152602481018590526044016107e7565b6001600160a01b0385166000908152600360209081526040808320338452909152902054610dc79085906113e6565b6001600160a01b0386166000908152600360209081526040808320338452909152902055610df584836113e6565b6001600160a01b03861660009081526004602052604081209190915560018054839290610e239084906113e6565b9091555050600054604051637a94c56560e11b815233600482015260248101859052604481018690526001600160a01b039091169063f5298aca90606401600060405180830381600087803b158015610e7b57600080fd5b505af1158015610e8f573d6000803e3d6000fd5b5050506001600160a01b0386169050337ff7dd8a134438de4c59401760e24ef5c6cc9c74583b2b022085697f3021e5976860008785610ece82896113e6565b604080519415158552602085019390935291830152606082015260800160405180910390a3610efd33826110cd565b5050505050565b33600090815260056020526040902054811115610f55573360008181526005602052604090819020549051636e4ffa2960e01b815260048101929092526024820152604481018290526064016107e7565b610f5f33826110cd565b50565b610f6a610ff0565b600060015447610f7a91906113e6565b905081811015610fa757604051633ebbc33760e01b815260048101839052602481018290526044016107e7565b610fb133836110cd565b5050565b610fbd610ff0565b6001600160a01b038116610fe757604051631e4fbdf760e01b8152600060048201526024016107e7565b610f5f8161104b565b336110227f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146109b25760405163118cdaa760e01b81523360048201526024016107e7565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6110c46110e9565b610f5f81611132565b60003860003884865af1610fb15763b12d13eb6000526004601cfd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166109b257604051631afcd79f60e31b815260040160405180910390fd5b610fbd6110e9565b80356001600160a01b038116811461115157600080fd5b919050565b6000806040838503121561116957600080fd5b6111728361113a565b91506111806020840161113a565b90509250929050565b60006020828403121561119b57600080fd5b6105978261113a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156111e3576111e36111a4565b604052919050565b600080604083850312156111fe57600080fd5b8235915060208084013567ffffffffffffffff8082111561121e57600080fd5b818601915086601f83011261123257600080fd5b813581811115611244576112446111a4565b8060051b91506112558483016111ba565b818152918301840191848101908984111561126f57600080fd5b938501935b83851015611294576112858561113a565b82529385019390850190611274565b8096505050505050509250929050565b600080604083850312156112b757600080fd5b6112c08361113a565b946020939093013593505050565b600080604083850312156112e157600080fd5b50508035926020909101359150565b60006020828403121561130257600080fd5b6040516020810181811067ffffffffffffffff82111715611325576113256111a4565b6040526113318361113a565b81529392505050565b60006020828403121561134c57600080fd5b5035919050565b60006020828403121561136557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008261139f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b8082018082111561059a5761059a61136c565b6000600182016113df576113df61136c565b5060010190565b8181038181111561059a5761059a61136c565b808202811582820484141761059a5761059a61136c565b60006020828403121561142257600080fd5b8151801515811461143257600080fd5b939250505056fea2646970667358221220c3571fc060db98d23f3fe075e08fe6ae3cc11acf0cd2a57b333fd594269f0d4264736f6c63430008140033";

type LongStarShareV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LongStarShareV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LongStarShareV1__factory extends ContractFactory {
  constructor(...args: LongStarShareV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LongStarShareV1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LongStarShareV1__factory {
    return super.connect(runner) as LongStarShareV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LongStarShareV1Interface {
    return new Interface(_abi) as LongStarShareV1Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LongStarShareV1 {
    return new Contract(address, _abi, runner) as unknown as LongStarShareV1;
  }
}
